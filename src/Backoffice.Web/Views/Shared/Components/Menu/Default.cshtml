@model List<MenuViewModel>

<div class="space-y-1" x-bind:class="{ 'px-0': sidebarMini && window.innerWidth >= 1024 }">
    <ul class="space-y-1">
        @foreach (var menuItem in Model)
        {
            @if (menuItem.IsSectionHeader)
            {
                <li x-data="{ open: @(menuItem.IsExpanded.ToString().ToLower()) }" class="mt-4">
                    <!-- Section Header -->
                    <button @@click="open = !open"
                            class="flex items-center justify-between w-full px-3 py-2 text-xs font-medium uppercase tracking-wider text-gray-400 dark:text-gray-300 hover:text-white focus:outline-none"
                            x-bind:class="{
                                'justify-center px-0': sidebarMini && window.innerWidth >= 1024,
                                'text-white': open
                            }">
                        <!-- Icon -->
                        @if (!string.IsNullOrEmpty(menuItem.Icon))
                        {
                            <i class="@menuItem.Icon w-5 text-center"></i>
                        }

                        <!-- Label -->
                        <span class="flex-1 ml-2" x-bind:class="{ 'hidden': sidebarMini && window.innerWidth >= 1024 }">@menuItem.Name</span>

                        <!-- Arrow -->
                        <i class="fas fa-chevron-down text-xs transition-transform duration-200"
                           x-bind:class="{
                               'transform rotate-180': open,
                               'hidden': sidebarMini && window.innerWidth >= 1024
                           }"></i>
                    </button>

                    <!-- Section Submenu -->
                    <div x-show="open || (sidebarMini && window.innerWidth >= 1024 && $event.type === 'mouseover')"
                         x-transition:enter="transition ease-out duration-200"
                         x-transition:enter-start="opacity-0 -translate-y-1"
                         x-transition:enter-end="opacity-100 translate-y-0"
                         x-transition:leave="transition ease-in duration-150"
                         x-transition:leave-start="opacity-100 translate-y-0"
                         x-transition:leave-end="opacity-0 -translate-y-1"
                         class="pl-6 mt-1 space-y-1"
                         x-bind:class="{ 'pl-0': sidebarMini && window.innerWidth >= 1024 }">
                        @if (menuItem.HasChildren)
                        {
                            @await Html.PartialAsync("_CollapsibleMenuItems", menuItem.Children)
                        }
                    </div>
                </li>
            }
            else
            {
                @if (menuItem.HasChildren)
                {
                    <li x-data="{ open: @(menuItem.IsExpanded.ToString().ToLower()) }">
                        <!-- Collapsible Menu -->
                        <button @@click="open = !open"
                                class="flex items-center justify-between w-full px-3 py-2 text-sm font-medium rounded-md hover:bg-gray-800 dark:hover:bg-gray-700 focus:outline-none"
                                x-bind:class="{
                                    'justify-center px-2': sidebarMini && window.innerWidth >= 1024,
                                    'text-white bg-gray-800 dark:bg-gray-700': open || @(menuItem.IsCurrentPage.ToString().ToLower()),
                                    'text-gray-300 dark:text-gray-400': !(open || @(menuItem.IsCurrentPage.ToString().ToLower()))
                                }">
                            <!-- Icon -->
                            @if (!string.IsNullOrEmpty(menuItem.Icon))
                            {
                                <i class="@menuItem.Icon w-5 text-center"></i>
                            }
                            else
                            {
                                <i class="far fa-dot-circle w-5 text-center"></i>
                            }

                            <!-- Label -->
                            <span class="flex-1 ml-2" x-bind:class="{ 'hidden': sidebarMini && window.innerWidth >= 1024 }">@menuItem.Name</span>

                            <!-- Arrow -->
                            <i class="fas fa-chevron-down text-xs transition-transform duration-200"
                               x-bind:class="{
                                   'transform rotate-180': open,
                                   'hidden': sidebarMini && window.innerWidth >= 1024
                               }"></i>
                        </button>

                        <!-- Submenu -->
                        <div x-show="open || (sidebarMini && window.innerWidth >= 1024 && $event.type === 'mouseover')"
                             x-transition:enter="transition ease-out duration-200"
                             x-transition:enter-start="opacity-0 -translate-y-1"
                             x-transition:enter-end="opacity-100 translate-y-0"
                             x-transition:leave="transition ease-in duration-150"
                             x-transition:leave-start="opacity-100 translate-y-0"
                             x-transition:leave-end="opacity-0 -translate-y-1"
                             class="pl-10 mt-1 space-y-1"
                             x-bind:class="{
                                 'pl-0 absolute left-full top-0 min-w-[200px] bg-gray-900 dark:bg-gray-800 shadow-lg rounded-md mt-0 ml-1 py-2': sidebarMini && window.innerWidth >= 1024
                             }">
                            @await Html.PartialAsync("_CollapsibleMenuItems", menuItem.Children)
                        </div>
                    </li>
                }
                else
                {
                    <li>
                        <!-- Regular Menu Item -->
                        <a href="@menuItem.GetUrl()"
                           class="flex items-center px-3 py-2 text-sm font-medium rounded-md hover:bg-gray-800 dark:hover:bg-gray-700 focus:outline-none"
                           x-bind:class="{
                               'justify-center px-2': sidebarMini && window.innerWidth >= 1024,
                               'text-white bg-primary-700': @(menuItem.IsCurrentPage.ToString().ToLower()),
                               'text-gray-300 dark:text-gray-400': !@(menuItem.IsCurrentPage.ToString().ToLower())
                           }">
                            <!-- Icon -->
                            @if (!string.IsNullOrEmpty(menuItem.Icon))
                            {
                                <i class="@menuItem.Icon w-5 text-center"></i>
                            }
                            else
                            {
                                <i class="far fa-dot-circle w-5 text-center"></i>
                            }

                            <!-- Label -->
                            <span class="ml-2" x-bind:class="{ 'hidden': sidebarMini && window.innerWidth >= 1024 }">@menuItem.Name</span>
                        </a>
                    </li>
                }
            }
        }
    </ul>
</div>