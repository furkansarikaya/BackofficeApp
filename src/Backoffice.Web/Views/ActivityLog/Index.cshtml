@model Backoffice.Web.ViewModels.Auditing.ActivityLogListViewModel
@{
    ViewData["Title"] = ViewData["UserName"] != null 
        ? $"{ViewData["UserName"]} Kullanıcısının Aktiviteleri" 
        : (ViewData["EntityName"] != null 
            ? $"{ViewData["EntityName"]} Aktiviteleri" 
            : "Aktivite Günlüğü");
}

<div class="card mb-4">
    <div class="card-header">
        <h5 class="card-title mb-0">Filtreler</h5>
    </div>
    <div class="card-body">
        <form asp-action="Index" method="get" id="filterForm">
            <div class="row">
                <div class="col-md-3 mb-3">
                    <label asp-for="Filter.Category" class="form-label">Kategori</label>
                    <select asp-for="Filter.Category" class="form-select" id="categorySelect">
                        <option value="">-- Tüm Kategoriler --</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>
                
                <div class="col-md-3 mb-3">
                    <label asp-for="Filter.ActivityType" class="form-label">İşlem Tipi</label>
                    <select asp-for="Filter.ActivityType" class="form-select" id="activityTypeSelect">
                        <option value="">-- Tüm İşlemler --</option>
                        @foreach (var activityType in Model.ActivityTypes)
                        {
                            <option value="@activityType">@activityType</option>
                        }
                    </select>
                </div>
                
                <div class="col-md-3 mb-3">
                    <label asp-for="Filter.EntityType" class="form-label">Varlık Tipi</label>
                    <input asp-for="Filter.EntityType" class="form-control" placeholder="Ör: User, Role, Menu" />
                </div>
                
                <div class="col-md-3 mb-3">
                    <label asp-for="Filter.EntityId" class="form-label">Varlık ID</label>
                    <input asp-for="Filter.EntityId" class="form-control" placeholder="Ör: 5, abc123" />
                </div>
            </div>
            
            <div class="row">
                <div class="col-md-3 mb-3">
                    <label asp-for="Filter.FromDate" class="form-label">Başlangıç Tarihi</label>
                    <input asp-for="Filter.FromDate" class="form-control" type="date" />
                </div>
                
                <div class="col-md-3 mb-3">
                    <label asp-for="Filter.ToDate" class="form-label">Bitiş Tarihi</label>
                    <input asp-for="Filter.ToDate" class="form-control" type="date" />
                </div>
                
                <div class="col-md-6 mb-3">
                    <label asp-for="Filter.SearchTerm" class="form-label">Arama</label>
                    <div class="input-group">
                        <input asp-for="Filter.SearchTerm" class="form-control" placeholder="Kullanıcı adı, açıklama veya varlık ID ile ara..." />
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search me-1"></i> Ara
                        </button>
                    </div>
                </div>
            </div>
            
            @if (ViewData["UserName"] != null)
            {
                <input type="hidden" asp-for="Filter.UserId" />
            }
        </form>
    </div>
</div>

<div class="card">
    <div class="card-body">
        @if (Model.ActivityLogs == null || !Model.ActivityLogs.Items.Any())
        {
            <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i> Aktivite logu bulunamadı.
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Tarih</th>
                            <th>Kullanıcı</th>
                            <th>Kategori</th>
                            <th>İşlem</th>
                            <th>Varlık</th>
                            <th>IP Adresi</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var log in Model.ActivityLogs.Items)
                        {
                            <tr>
                                <td>@log.Timestamp.ToLocalTime().ToString("dd.MM.yyyy HH:mm:ss")</td>
                                <td>
                                    <a asp-action="UserActivities" asp-route-userId="@log.UserId" class="text-decoration-none">
                                        @log.UserName
                                    </a>
                                </td>
                                <td>@log.Category</td>
                                <td>
                                    @{
                                        var badgeClass = "bg-secondary";
                                        
                                        if (log.ActivityType.Contains("Create")) badgeClass = "bg-success";
                                        else if (log.ActivityType.Contains("Update")) badgeClass = "bg-primary";
                                        else if (log.ActivityType.Contains("Delete")) badgeClass = "bg-danger";
                                        else if (log.ActivityType.Contains("Login")) badgeClass = "bg-info";
                                        else if (log.ActivityType.Contains("Failed")) badgeClass = "bg-warning";
                                    }
                                    
                                    <span class="badge @badgeClass">@log.ActivityType</span>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(log.EntityType) && !string.IsNullOrEmpty(log.EntityId))
                                    {
                                        <a asp-action="EntityActivities" 
                                           asp-route-entityType="@log.EntityType" 
                                           asp-route-entityId="@log.EntityId"
                                           class="text-decoration-none">
                                            @log.EntityType (@log.EntityId)
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>@log.IpAddress</td>
                                <td>
                                    <a asp-action="Details" asp-route-id="@log.Id" class="btn btn-sm btn-info">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="d-flex justify-content-between align-items-center mt-3">
                <div>
                    Toplam: <span class="fw-bold">@Model.ActivityLogs.TotalCount</span> kayıt
                </div>

                @if (Model.ActivityLogs.TotalPages > 1)
                {
                    <nav aria-label="Page navigation">
                        <ul class="pagination mb-0">
                            <li class="page-item @(!Model.ActivityLogs.HasPreviousPage ? "disabled" : "")">
                                <a class="page-link" asp-action="Index"
                                   asp-all-route-data="@(new Dictionary<string, string> {
                                       {"pageNumber", (Model.ActivityLogs.PageIndex - 1).ToString() },
                                       {"Category", Model.Filter.Category ?? "" },
                                       {"ActivityType", Model.Filter.ActivityType ?? "" },
                                       {"EntityType", Model.Filter.EntityType ?? "" },
                                       {"EntityId", Model.Filter.EntityId ?? "" },
                                       {"SearchTerm", Model.Filter.SearchTerm ?? "" },
                                       {"UserId", Model.Filter.UserId ?? "" },
                                       {"FromDate", Model.Filter.FromDate?.ToString("yyyy-MM-dd") ?? "" },
                                       {"ToDate", Model.Filter.ToDate?.ToString("yyyy-MM-dd") ?? "" }
                                   })">
                                    <i class="fas fa-angle-left"></i>
                                </a>
                            </li>

                            @for (int i = 1; i <= Model.ActivityLogs.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.ActivityLogs.PageIndex ? "active" : "")">
                                    <a class="page-link" asp-action="Index"
                                       asp-all-route-data="@(new Dictionary<string, string> {
                                           {"pageNumber", i.ToString() },
                                           {"Category", Model.Filter.Category ?? "" },
                                           {"ActivityType", Model.Filter.ActivityType ?? "" },
                                           {"EntityType", Model.Filter.EntityType ?? "" },
                                           {"EntityId", Model.Filter.EntityId ?? "" },
                                           {"SearchTerm", Model.Filter.SearchTerm ?? "" },
                                           {"UserId", Model.Filter.UserId ?? "" },
                                           {"FromDate", Model.Filter.FromDate?.ToString("yyyy-MM-dd") ?? "" },
                                           {"ToDate", Model.Filter.ToDate?.ToString("yyyy-MM-dd") ?? "" }
                                       })">
                                        @i
                                    </a>
                                </li>
                            }

                            <li class="page-item @(!Model.ActivityLogs.HasNextPage ? "disabled" : "")">
                                <a class="page-link" asp-action="Index"
                                   asp-all-route-data="@(new Dictionary<string, string> {
                                       {"pageNumber", (Model.ActivityLogs.PageIndex + 1).ToString() },
                                       {"Category", Model.Filter.Category ?? "" },
                                       {"ActivityType", Model.Filter.ActivityType ?? "" },
                                       {"EntityType", Model.Filter.EntityType ?? "" },
                                       {"EntityId", Model.Filter.EntityId ?? "" },
                                       {"SearchTerm", Model.Filter.SearchTerm ?? "" },
                                       {"UserId", Model.Filter.UserId ?? "" },
                                       {"FromDate", Model.Filter.FromDate?.ToString("yyyy-MM-dd") ?? "" },
                                       {"ToDate", Model.Filter.ToDate?.ToString("yyyy-MM-dd") ?? "" }
                                   })">
                                    <i class="fas fa-angle-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Kategori değiştiğinde işlem tiplerini güncelle
            $('#categorySelect').change(function() {
                var category = $(this).val();
                
                if (category) {
                    // AJAX ile işlem tiplerini al
                    $.getJSON('@Url.Action("GetActivityTypes")', { category: category }, function(data) {
                        var activityTypeSelect = $('#activityTypeSelect');
                        activityTypeSelect.empty();
                        
                        // Default seçenek ekle
                        activityTypeSelect.append($('<option></option>')
                            .attr('value', '')
                            .text('-- Tüm İşlemler --'));
                        
                        // İşlem tiplerini ekle
                        $.each(data, function(index, item) {
                            activityTypeSelect.append($('<option></option>')
                                .attr('value', item)
                                .text(item));
                        });
                    });
                } else {
                    // Kategori seçilmediğinde işlem tiplerini temizle
                    var activityTypeSelect = $('#activityTypeSelect');
                    activityTypeSelect.empty();
                    activityTypeSelect.append($('<option></option>')
                        .attr('value', '')
                        .text('-- Tüm İşlemler --'));
                }
            });
            
            // Sayfa yüklendiğinde mevcut kategori seçiliyse işlem tiplerini yükle
            var initialCategory = $('#categorySelect').val();
            if (initialCategory) {
                $('#categorySelect').trigger('change');
            }
        });
    </script>
}