@model Backoffice.Web.ViewModels.Auditing.ActivityLogListViewModel
@{
    ViewData["Title"] = ViewData["UserName"] != null
        ? $"{ViewData["UserName"]} Kullanıcısının Aktiviteleri"
        : (ViewData["EntityName"] != null
            ? $"{ViewData["EntityName"]} Aktiviteleri"
            : "Aktivite Günlüğü");
}

<div class="bg-white rounded-lg shadow-sm border border-gray-100 mb-6">
    <div class="px-6 py-4 border-b border-gray-200">
        <h2 class="text-lg font-medium text-gray-900">Filtreler</h2>
    </div>
    <div class="p-6">
        <form asp-action="Index" method="get" id="filterForm">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                <div>
                    <label asp-for="Filter.Category" class="block text-sm font-medium text-gray-700">Kategori</label>
                    <div class="relative mt-1">
                        <select asp-for="Filter.Category" id="categorySelect" class="block w-full pl-3 pr-10 py-2 text-base border border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 rounded-md appearance-none bg-white">
                            <option value="">-- Tüm Kategoriler --</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category">@category</option>
                            }
                        </select>
                        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-500">
                            <i class="fas fa-chevron-down"></i>
                        </div>
                    </div>
                </div>

                <div>
                    <label asp-for="Filter.ActivityType" class="block text-sm font-medium text-gray-700">İşlem Tipi</label>
                    <div class="relative mt-1">
                        <select asp-for="Filter.ActivityType" id="activityTypeSelect" class="block w-full pl-3 pr-10 py-2 text-base border border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 rounded-md appearance-none bg-white">
                            <option value="">-- Tüm İşlemler --</option>
                            @foreach (var activityType in Model.ActivityTypes)
                            {
                                <option value="@activityType">@activityType</option>
                            }
                        </select>
                        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-500">
                            <i class="fas fa-chevron-down"></i>
                        </div>
                    </div>
                </div>

                <div>
                    <label asp-for="Filter.EntityType" class="block text-sm font-medium text-gray-700">Varlık Tipi</label>
                    <input asp-for="Filter.EntityType" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500" placeholder="Ör: User, Role, Menu" />
                </div>

                <div>
                    <label asp-for="Filter.EntityId" class="block text-sm font-medium text-gray-700">Varlık ID</label>
                    <input asp-for="Filter.EntityId" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500" placeholder="Ör: 5, abc123" />
                </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
                <div>
                    <label asp-for="Filter.FromDate" class="block text-sm font-medium text-gray-700">Başlangıç Tarihi</label>
                    <input asp-for="Filter.FromDate" type="date" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500" />
                </div>

                <div>
                    <label asp-for="Filter.ToDate" class="block text-sm font-medium text-gray-700">Bitiş Tarihi</label>
                    <input asp-for="Filter.ToDate" type="date" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500" />
                </div>

                <div>
                    <label asp-for="Filter.SearchTerm" class="block text-sm font-medium text-gray-700">Arama</label>
                    <div class="mt-1 flex">
                        <input asp-for="Filter.SearchTerm" class="flex-1 block w-full px-3 py-2 border border-gray-300 rounded-l-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500" placeholder="Kullanıcı adı, açıklama veya varlık ID ile ara..." />
                        <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-r-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                            <i class="fas fa-search mr-2"></i> Ara
                        </button>
                    </div>
                </div>
            </div>

            @if (ViewData["UserName"] != null)
            {
                <input type="hidden" asp-for="Filter.UserId" />
            }
        </form>
    </div>
</div>

<div class="bg-white rounded-lg shadow-sm border border-gray-100">
    <div class="p-6">
        @if (Model.ActivityLogs == null || !Model.ActivityLogs.Items.Any())
        {
            <div class="flex items-center p-4 text-blue-800 border-l-4 border-blue-500 bg-blue-50">
                <i class="fas fa-info-circle mr-2"></i> Aktivite logu bulunamadı.
            </div>
        }
        else
        {
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="text-xs font-medium text-gray-500 bg-gray-50 uppercase tracking-wider">
                    <tr>
                        <th class="px-5 py-3 text-left">Tarih</th>
                        <th class="px-5 py-3 text-left">Kullanıcı</th>
                        <th class="px-5 py-3 text-left">Kategori</th>
                        <th class="px-5 py-3 text-left">İşlem</th>
                        <th class="px-5 py-3 text-left">Varlık</th>
                        <th class="px-5 py-3 text-left">IP Adresi</th>
                        <th class="px-5 py-3 text-left">İşlemler</th>
                    </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-100">
                    @foreach (var log in Model.ActivityLogs.Items)
                    {
                        <tr class="hover:bg-gray-50">
                            <td class="px-5 py-4 text-sm">@log.Timestamp.ToLocalTime().ToString("dd.MM.yyyy HH:mm:ss")</td>
                            <td class="px-5 py-4">
                                <a asp-action="UserActivities" asp-route-userId="@log.UserId" class="text-primary-600 hover:text-primary-700 font-medium">
                                    @log.UserName
                                </a>
                            </td>
                            <td class="px-5 py-4">@log.Category</td>
                            <td class="px-5 py-4">
                                @{
                                    var badgeClass = "bg-gray-200 text-gray-800";

                                    if (log.ActivityType.Contains("Create")) badgeClass = "bg-green-100 text-green-800";
                                    else if (log.ActivityType.Contains("Update")) badgeClass = "bg-blue-100 text-blue-800";
                                    else if (log.ActivityType.Contains("Delete")) badgeClass = "bg-red-100 text-red-800";
                                    else if (log.ActivityType.Contains("Login")) badgeClass = "bg-blue-100 text-blue-800";
                                    else if (log.ActivityType.Contains("Failed")) badgeClass = "bg-yellow-100 text-yellow-800";
                                }

                                <span class="px-2 py-1 text-xs font-medium rounded-full @badgeClass">@log.ActivityType</span>
                            </td>
                            <td class="px-5 py-4">
                                @if (!string.IsNullOrEmpty(log.EntityType) && !string.IsNullOrEmpty(log.EntityId))
                                {
                                    <a asp-action="EntityActivities"
                                       asp-route-entityType="@log.EntityType"
                                       asp-route-entityId="@log.EntityId"
                                       class="text-primary-600 hover:text-primary-700">
                                        @log.EntityType (@log.EntityId)
                                    </a>
                                }
                                else
                                {
                                    <span class="text-gray-400">-</span>
                                }
                            </td>
                            <td class="px-5 py-4 font-mono text-sm">@log.IpAddress</td>
                            <td class="px-5 py-4">
                                <a asp-action="Details" asp-route-id="@log.Id" class="inline-flex items-center p-1.5 bg-blue-500 text-white rounded-md hover:bg-blue-600" title="Detay Görüntüle">
                                    <i class="fas fa-eye"></i>
                                </a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>

            <div class="flex flex-col md:flex-row justify-between items-center mt-6">
                <div class="mb-4 md:mb-0">
                    Toplam: <span class="font-semibold">@Model.ActivityLogs.TotalCount</span> kayıt
                </div>

                @if (Model.ActivityLogs.TotalPages > 1)
                {
                    <nav aria-label="Page navigation">
                        <ul class="flex">
                            <li class="@(!Model.ActivityLogs.HasPreviousPage ? "opacity-50 pointer-events-none" : "")">
                                <a class="px-3 py-2 border border-gray-300 rounded-l-md bg-white text-gray-600 hover:bg-gray-100"
                                   asp-action="Index"
                                   asp-all-route-data="@(new Dictionary<string, string> {
                                                           {"pageNumber", (Model.ActivityLogs.PageIndex - 1).ToString() },
                                                           {"Category", Model.Filter.Category ?? "" },
                                                           {"ActivityType", Model.Filter.ActivityType ?? "" },
                                                           {"EntityType", Model.Filter.EntityType ?? "" },
                                                           {"EntityId", Model.Filter.EntityId ?? "" },
                                                           {"SearchTerm", Model.Filter.SearchTerm ?? "" },
                                                           {"UserId", Model.Filter.UserId ?? "" },
                                                           {"FromDate", Model.Filter.FromDate?.ToString("yyyy-MM-dd") ?? "" },
                                                           {"ToDate", Model.Filter.ToDate?.ToString("yyyy-MM-dd") ?? "" }
                                                       })">
                                    <i class="fas fa-angle-left"></i>
                                </a>
                            </li>

                            @for (int i = 1; i <= Model.ActivityLogs.TotalPages; i++)
                            {
                                <li>
                                    <a class="px-3 py-2 border border-gray-300 border-l-0 bg-white @(i == Model.ActivityLogs.PageIndex ? "text-primary-600 font-medium" : "text-gray-600 hover:bg-gray-100")"
                                       asp-action="Index"
                                       asp-all-route-data="@(new Dictionary<string, string> {
                                                               {"pageNumber", i.ToString() },
                                                               {"Category", Model.Filter.Category ?? "" },
                                                               {"ActivityType", Model.Filter.ActivityType ?? "" },
                                                               {"EntityType", Model.Filter.EntityType ?? "" },
                                                               {"EntityId", Model.Filter.EntityId ?? "" },
                                                               {"SearchTerm", Model.Filter.SearchTerm ?? "" },
                                                               {"UserId", Model.Filter.UserId ?? "" },
                                                               {"FromDate", Model.Filter.FromDate?.ToString("yyyy-MM-dd") ?? "" },
                                                               {"ToDate", Model.Filter.ToDate?.ToString("yyyy-MM-dd") ?? "" }
                                                           })">
                                        @i
                                    </a>
                                </li>
                            }

                            <li class="@(!Model.ActivityLogs.HasNextPage ? "opacity-50 pointer-events-none" : "")">
                                <a class="px-3 py-2 border border-gray-300 border-l-0 rounded-r-md bg-white text-gray-600 hover:bg-gray-100"
                                   asp-action="Index"
                                   asp-all-route-data="@(new Dictionary<string, string> {
                                                           {"pageNumber", (Model.ActivityLogs.PageIndex + 1).ToString() },
                                                           {"Category", Model.Filter.Category ?? "" },
                                                           {"ActivityType", Model.Filter.ActivityType ?? "" },
                                                           {"EntityType", Model.Filter.EntityType ?? "" },
                                                           {"EntityId", Model.Filter.EntityId ?? "" },
                                                           {"SearchTerm", Model.Filter.SearchTerm ?? "" },
                                                           {"UserId", Model.Filter.UserId ?? "" },
                                                           {"FromDate", Model.Filter.FromDate?.ToString("yyyy-MM-dd") ?? "" },
                                                           {"ToDate", Model.Filter.ToDate?.ToString("yyyy-MM-dd") ?? "" }
                                                       })">
                                    <i class="fas fa-angle-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Kategori değiştiğinde işlem tiplerini güncelle
            const categorySelect = document.getElementById('categorySelect');
            const activityTypeSelect = document.getElementById('activityTypeSelect');

            if (categorySelect && activityTypeSelect) {
                categorySelect.addEventListener('change', function() {
                    const category = this.value;

                    if (category) {
                        // AJAX ile işlem tiplerini al
                        fetch(`@Url.Action("GetActivityTypes")?category=${encodeURIComponent(category)}`)
                            .then(response => response.json())
                            .then(data => {
                                // Mevcut seçenekleri temizle
                                activityTypeSelect.innerHTML = '';

                                // Default seçenek ekle
                                const defaultOption = document.createElement('option');
                                defaultOption.value = '';
                                defaultOption.textContent = '-- Tüm İşlemler --';
                                activityTypeSelect.appendChild(defaultOption);

                                // İşlem tiplerini ekle
                                data.forEach(item => {
                                    const option = document.createElement('option');
                                    option.value = item;
                                    option.textContent = item;
                                    activityTypeSelect.appendChild(option);
                                });
                            })
                            .catch(error => console.error('İşlem tipleri yüklenirken hata oluştu:', error));
                    } else {
                        // Kategori seçilmediğinde işlem tiplerini temizle
                        activityTypeSelect.innerHTML = '';
                        const defaultOption = document.createElement('option');
                        defaultOption.value = '';
                        defaultOption.textContent = '-- Tüm İşlemler --';
                        activityTypeSelect.appendChild(defaultOption);
                    }
                });

                // Sayfa yüklendiğinde mevcut kategori seçiliyse işlem tiplerini yükle
                if (categorySelect.value) {
                    categorySelect.dispatchEvent(new Event('change'));
                }
            }
        });
    </script>
}