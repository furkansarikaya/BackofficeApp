@model Backoffice.Web.ViewModels.Logging.LogListViewModel
@{
    ViewData["Title"] = "Log Yönetimi";
}

<div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-100 dark:border-gray-700 mb-6">
    <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
        <h2 class="text-lg font-medium text-gray-900 dark:text-gray-100">Filtreler</h2>
    </div>
    <div class="p-6">
        <form asp-action="Index" method="get" id="filterForm">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                <div>
                    <label asp-for="Filter.Level" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Seviye</label>
                    <div class="relative mt-1">
                        <select asp-for="Filter.Level" id="levelSelect" class="block w-full pl-3 pr-10 py-2 text-base border border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 dark:focus:ring-primary-400 focus:border-primary-500 dark:focus:border-primary-400 rounded-md appearance-none bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100">
                            <option value="">-- Tüm Seviyeler --</option>
                            @foreach (var level in Enum.GetValues<LogLevel>().Where(l => l != LogLevel.None))
                            {
                                <option value="@level">@level</option>
                            }
                        </select>
                        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-500 dark:text-gray-400">
                            <i class="fas fa-chevron-down"></i>
                        </div>
                    </div>
                </div>

                <div>
                    <label asp-for="Filter.Category" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Kategori</label>
                    <div class="relative mt-1">
                        <select asp-for="Filter.Category" id="categorySelect" class="block w-full pl-3 pr-10 py-2 text-base border border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 dark:focus:ring-primary-400 focus:border-primary-500 dark:focus:border-primary-400 rounded-md appearance-none bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100">
                            <option value="">-- Tüm Kategoriler --</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category">@category</option>
                            }
                        </select>
                        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-500 dark:text-gray-400">
                            <i class="fas fa-chevron-down"></i>
                        </div>
                    </div>
                </div>

                <div>
                    <label asp-for="Filter.FromDate" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Başlangıç Tarihi</label>
                    <input asp-for="Filter.FromDate" type="date" class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 dark:focus:ring-primary-400 focus:border-primary-500 dark:focus:border-primary-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100" />
                </div>

                <div>
                    <label asp-for="Filter.ToDate" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Bitiş Tarihi</label>
                    <input asp-for="Filter.ToDate" type="date" class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 dark:focus:ring-primary-400 focus:border-primary-500 dark:focus:border-primary-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100" />
                </div>
            </div>

            <div class="mt-4 flex">
                <div class="flex-1">
                    <label asp-for="Filter.SearchTerm" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Arama</label>
                    <div class="mt-1 flex">
                        <input asp-for="Filter.SearchTerm" class="flex-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-l-md shadow-sm focus:outline-none focus:ring-primary-500 dark:focus:ring-primary-400 focus:border-primary-500 dark:focus:border-primary-400 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100" placeholder="Log içeriği, kullanıcı adı veya kategori ara..." />
                        <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-r-md text-white bg-primary-600 dark:bg-primary-700 hover:bg-primary-700 dark:hover:bg-primary-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 dark:focus:ring-primary-400">
                            <i class="fas fa-search mr-2"></i> Ara
                        </button>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.Filter.UserId))
            {
                <input type="hidden" asp-for="Filter.UserId" />
            }
        </form>
    </div>
</div>

<div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-100 dark:border-gray-700">
    <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
        <h2 class="text-lg font-medium text-gray-900 dark:text-gray-100">Log Kayıtları</h2>
        <a href="@Url.Action("Statistics")" class="inline-flex items-center px-4 py-2 bg-blue-600 dark:bg-blue-700 text-white rounded-md hover:bg-blue-700 dark:hover:bg-blue-800">
            <i class="fas fa-chart-bar mr-2"></i> İstatistikler
        </a>
    </div>
    <div class="p-6">
        @if (Model.Logs == null || !Model.Logs.Items.Any())
        {
            <div class="flex items-center p-4 text-blue-800 dark:text-blue-300 border-l-4 border-blue-500 dark:border-blue-700 bg-blue-50 dark:bg-blue-900">
                <i class="fas fa-info-circle mr-2"></i> Log kaydı bulunamadı.
            </div>
        }
        else
        {
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="text-xs font-medium text-gray-500 dark:text-gray-400 bg-gray-50 dark:bg-gray-700 uppercase tracking-wider">
                    <tr>
                        <th class="px-5 py-3 text-left">Tarih</th>
                        <th class="px-5 py-3 text-left">Kullanıcı</th>
                        <th class="px-5 py-3 text-left">Seviye</th>
                        <th class="px-5 py-3 text-left">Kategori</th>
                        <th class="px-5 py-3 text-left">Mesaj</th>
                        <th class="px-5 py-3 text-left">IP Adresi</th>
                        <th class="px-5 py-3 text-left">İşlemler</th>
                    </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-100 dark:divide-gray-700">
                    @foreach (var log in Model.Logs.Items)
                    {
                        <tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
                            <td class="px-5 py-4 text-sm text-gray-900 dark:text-gray-300">@log.Timestamp.ToLocalTime().ToString("dd.MM.yyyy HH:mm:ss")</td>
                            <td class="px-5 py-4">
                                @if (!string.IsNullOrEmpty(log.UserId))
                                {
                                    <a asp-action="UserLogs" asp-route-userId="@log.UserId" class="text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium">
                                        @(string.IsNullOrEmpty(log.UserName) ? log.UserId : log.UserName)
                                    </a>
                                }
                                else
                                {
                                    <span class="text-gray-400 dark:text-gray-500">-</span>
                                }
                            </td>
                            <td class="px-5 py-4">
                                @{
                                    var badgeClass = log.Level switch
                                    {
                                        LogLevel.Debug => "bg-gray-100 dark:bg-gray-600 text-gray-800 dark:text-gray-300",
                                        LogLevel.Information => "bg-blue-100 dark:bg-blue-700 text-blue-800 dark:text-blue-200",
                                        LogLevel.Warning => "bg-yellow-100 dark:bg-yellow-700 text-yellow-800 dark:text-yellow-200",
                                        LogLevel.Error => "bg-red-100 dark:bg-red-700 text-red-800 dark:text-red-200",
                                        LogLevel.Critical => "bg-red-200 dark:bg-red-800 text-red-800 dark:text-red-200 font-bold",
                                        _ => "bg-gray-200 dark:bg-gray-600 text-gray-800 dark:text-gray-300"
                                    };
                                }

                                <span class="px-2 py-1 text-xs font-medium rounded-full @badgeClass">@log.Level</span>
                            </td>
                            <td class="px-5 py-4">
                                <a asp-action="CategoryLogs" asp-route-category="@log.Category" class="text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300">
                                    @log.Category
                                </a>
                            </td>
                            <td class="px-5 py-4 text-sm text-gray-900 dark:text-gray-300">
                                <div class="max-w-xs truncate" title="@log.Message">@log.Message</div>
                            </td>
                            <td class="px-5 py-4 font-mono text-sm text-gray-900 dark:text-gray-300">@log.IpAddress</td>
                            <td class="px-5 py-4">
                                <a asp-action="Details" asp-route-id="@log.Id" class="inline-flex items-center p-1.5 bg-blue-500 dark:bg-blue-600 text-white rounded-md hover:bg-blue-600 dark:hover:bg-blue-700" title="Detay Görüntüle">
                                    <i class="fas fa-eye"></i>
                                </a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            
            @await Component.InvokeAsync("Pagination", new PaginationViewModel {
                CurrentPage = Model.Logs.PageIndex,
                TotalPages = Model.Logs.TotalPages,
                TotalItems = Model.Logs.TotalCount,
                PageSize = Model.Logs.PageSize,
                ControllerName = "DbLog",
                ActionName = "Index",
                RouteValues = new Dictionary<string, object?> {
                    {"Level", Model.Filter.Level?.ToString() ?? "" },
                    {"Category", Model.Filter.Category ?? "" },
                    {"SearchTerm", Model.Filter.SearchTerm ?? "" },
                    {"UserId", Model.Filter.UserId ?? "" },
                    {"FromDate", Model.Filter.FromDate?.ToString("yyyy-MM-dd") ?? "" },
                    {"ToDate", Model.Filter.ToDate?.ToString("yyyy-MM-dd") ?? "" }
                }
            })
        }
    </div>
</div>