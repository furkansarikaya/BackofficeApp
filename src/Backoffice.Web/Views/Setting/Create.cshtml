@model Backoffice.Web.ViewModels.Settings.CreateSettingViewModel
@{
    ViewData["Title"] = "Yeni Ayar Oluştur";
}

<div class="bg-white rounded-lg shadow-sm border border-gray-100">
    <div class="px-6 py-4 border-b border-gray-200">
        <h2 class="text-lg font-medium text-gray-900">Yeni Ayar Oluştur</h2>
    </div>
    <div class="p-6">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="p-4 mb-4 text-red-700 bg-red-50 border-l-4 border-red-500"></div>

            <div class="space-y-6">
                <!-- Anahtar alanı -->
                <div>
                    <label asp-for="Key" class="block text-sm font-medium text-gray-700">Anahtar</label>
                    <div class="mt-1">
                        <input asp-for="Key" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500" 
                               placeholder="örn: mail.smtp.host veya sistem.site.baslik" />
                        <span asp-validation-for="Key" class="mt-1 text-sm text-red-600"></span>
                    </div>
                    <p class="mt-1 text-sm text-gray-500">Nokta (.) kullanarak hiyerarşik anahtarlar oluşturun. Örn: "sistem.site.baslik" gibi.</p>
                </div>

                <!-- Değer alanı -->
                <div>
                    <label asp-for="Value" class="block text-sm font-medium text-gray-700">Değer</label>
                    <div class="mt-1">
                        <textarea asp-for="Value" rows="4" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500"></textarea>
                        <span asp-validation-for="Value" class="mt-1 text-sm text-red-600"></span>
                    </div>
                </div>

                <!-- Açıklama alanı -->
                <div>
                    <label asp-for="Description" class="block text-sm font-medium text-gray-700">Açıklama</label>
                    <div class="mt-1">
                        <textarea asp-for="Description" rows="2" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500"
                                  placeholder="Bu ayarın ne amaçla kullanıldığını açıklayın"></textarea>
                        <span asp-validation-for="Description" class="mt-1 text-sm text-red-600"></span>
                    </div>
                </div>

                <!-- Şifreleme seçeneği -->
                <div class="flex items-start">
                    <div class="flex items-center h-5">
                        <input asp-for="ShouldEncrypt" type="checkbox" class="h-4 w-4 text-primary-600 border-gray-300 rounded focus:ring-primary-500" />
                    </div>
                    <div class="ml-3 text-sm">
                        <label asp-for="ShouldEncrypt" class="font-medium text-gray-700">Değeri şifrele</label>
                        <p class="text-gray-500">Hassas bilgiler (parola, API anahtarı vb.) için etkinleştirin.</p>
                    </div>
                </div>
            </div>

            <div class="flex justify-between mt-8 pt-5 border-t border-gray-200">
                <a asp-action="Index" class="inline-flex items-center px-4 py-2 bg-gray-200 hover:bg-gray-300 text-gray-800 rounded-md">
                    <i class="fas fa-arrow-left mr-2"></i> İptal
                </a>
                <button type="submit" class="inline-flex items-center px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                    <i class="fas fa-save mr-2"></i> Kaydet
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Anahtar değiştiğinde otomatik olarak şifreleme seçeneğini işaretle
            const keyInput = document.getElementById('Key');
            const encryptCheckbox = document.getElementById('ShouldEncrypt');
            
            if (keyInput && encryptCheckbox) {
                keyInput.addEventListener('input', function() {
                    const value = this.value.toLowerCase();
                    // Hassas bilgi olabilecek anahtar isimleri için şifrelemeyi etkinleştir
                    if (value.includes('password') || 
                        value.includes('secret') || 
                        value.includes('key') || 
                        value.includes('token') ||
                        value.includes('connection')) {
                        encryptCheckbox.checked = true;
                    }
                });
            }
        });
    </script>
}