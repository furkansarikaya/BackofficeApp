@model Backoffice.Web.ViewModels.Menu.MenuItemFormViewModel
@{
    ViewData["Title"] = "Menü Öğesi Düzenle";
}

<div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-100 dark:border-gray-700">
    <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-600">
        <h2 class="text-lg font-medium text-gray-900 dark:text-gray-100">Menü Öğesi Düzenle</h2>
    </div>
    <div class="p-6">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="p-4 mb-4 text-red-700 dark:text-red-400 bg-red-50 dark:bg-red-900 border-l-4 border-red-500 dark:border-red-700"></div>

            @await Html.PartialAsync("_CreateOrUpdate", Model)

            <div class="flex justify-between mt-8 pt-5 border-t border-gray-200 dark:border-gray-700">
                <a asp-action="Index" class="inline-flex items-center px-4 py-2 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 rounded-md">
                    <i class="fas fa-arrow-left mr-2"></i> İptal
                </a>
                <button type="submit" class="inline-flex items-center px-4 py-2 bg-primary-600 dark:bg-primary-700 hover:bg-primary-700 dark:hover:bg-primary-800 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 dark:focus:ring-primary-400">
                    <i class="fas fa-save mr-2"></i> Kaydet
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Bölüm başlığı seçildiğinde Controller/Action/URL alanlarını devre dışı bırak
            function updateFormBasedOnSectionHeader() {
                const isSectionHeader = document.getElementById('IsSectionHeader').checked;
                const fieldIds = ['Controller', 'Action', 'Url', 'RequiredPermissionCode'];

                fieldIds.forEach(id => {
                    const field = document.getElementById(id);
                    if (field) {
                        field.disabled = isSectionHeader;

                        // Optional: Add visual indication for disabled fields
                        if (isSectionHeader) {
                            field.classList.add('bg-gray-100', 'dark:bg-gray-600');
                        } else {
                            field.classList.remove('bg-gray-100', 'dark:bg-gray-600');
                        }
                    }
                });
            }

            // Sayfa yüklendiğinde ve checkbox değiştiğinde form alanlarını güncelle
            updateFormBasedOnSectionHeader();

            const sectionHeaderCheckbox = document.getElementById('IsSectionHeader');
            if (sectionHeaderCheckbox) {
                sectionHeaderCheckbox.addEventListener('change', updateFormBasedOnSectionHeader);
            }
        });
    </script>
}