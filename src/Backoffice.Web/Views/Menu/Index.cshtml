@model Backoffice.Web.ViewModels.Menu.MenuListViewModel
@{
    ViewData["Title"] = "Menü Yönetimi";

    List<FlatMenuItem> GetFlatMenuList(List<MenuViewModel> items, int level = 0)
    {
        var result = new List<FlatMenuItem>();
        foreach (var item in items)
        {
            result.Add(new FlatMenuItem
            {
                Id = item.Id,
                Name = item.Name,
                Icon = item.Icon,
                Controller = item.Controller,
                Action = item.Action,
                Url = item.Url,
                DisplayOrder = item.DisplayOrder,
                RequiredPermissionCode = item.RequiredPermissionCode,
                IsSectionHeader = item.IsSectionHeader,
                IsActive = item.IsActive,
                Level = level
            });
            if (item.Children.Any())
            {
                result.AddRange(GetFlatMenuList(item.Children, level + 1));
            }
        }

        return result;
    }
}

@section PageActions {
    <div>
        <a asp-action="Create" class="inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700">
            <i class="fas fa-plus mr-2"></i> Yeni Menü Öğesi
        </a>
    </div>
}

<div class="bg-white rounded-lg shadow-sm border border-gray-100">
    <div class="p-5">
        @if (!Model.MenuItems.Any())
        {
            <div class="flex items-center p-4 text-blue-800 border-l-4 border-blue-500 bg-blue-50">
                <i class="fas fa-info-circle mr-2"></i>
                <span>Sistemde tanımlı menü öğesi bulunmamaktadır.</span>
            </div>
        }
        else
        {
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="text-xs font-medium text-gray-500 bg-gray-50 uppercase tracking-wider">
                    <tr>
                        <th class="px-5 py-3 text-left">Sıra</th>
                        <th class="px-5 py-3 text-left">Tam Yol</th>
                        <th class="px-5 py-3 text-left">Tür</th>
                        <th class="px-5 py-3 text-left">Yönlendirme</th>
                        <th class="px-5 py-3 text-left">İzin</th>
                        <th class="px-5 py-3 text-left">Durum</th>
                        <th class="px-5 py-3 text-left">İşlemler</th>
                    </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-100">
                    @foreach (var item in GetFlatMenuList(Model.MenuItems))
                    {
                        <tr class="hover:bg-gray-50">
                            <td class="px-5 py-4">@item.DisplayOrder</td>
                            <td class="px-5 py-4">
                                <div style="padding-left: @(item.Level * 20)px;" class="flex items-center">
                                    @if (!string.IsNullOrEmpty(item.Icon))
                                    {
                                        <i class="@item.Icon mr-2"></i>
                                    }
                                    else if (!item.IsSectionHeader)
                                    {
                                        <i class="fas fa-dot-circle mr-2"></i>
                                    }
                                    <span>@item.Name</span>
                                </div>
                            </td>
                            <td class="px-5 py-4">
                                    <span class="px-2 py-1 text-xs font-medium rounded-full @(item.IsSectionHeader ? "bg-gray-200 text-gray-800" : "bg-primary-100 text-primary-800")">
                                        @(item.IsSectionHeader ? "Bölüm Başlığı" : "Menü Öğesi")
                                    </span>
                            </td>
                            <td class="px-5 py-4">
                                @if (item.IsSectionHeader)
                                {
                                    <span class="text-gray-400">-</span>
                                }
                                else if (!string.IsNullOrEmpty(item.Url))
                                {
                                    <span>@item.Url</span>
                                }
                                else if (!string.IsNullOrEmpty(item.Controller) && !string.IsNullOrEmpty(item.Action))
                                {
                                    <span>@item.Controller / @item.Action</span>
                                }
                                else
                                {
                                    <span class="text-gray-400">-</span>
                                }
                            </td>
                            <td class="px-5 py-4">
                                @if (!string.IsNullOrEmpty(item.RequiredPermissionCode))
                                {
                                    <span class="px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800">
                                            @item.RequiredPermissionCode
                                        </span>
                                }
                                else
                                {
                                    <span class="text-gray-400">-</span>
                                }
                            </td>
                            <td class="px-5 py-4">
                                    <span class="px-2 py-1 text-xs font-medium rounded-full @(item.IsActive ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                        @(item.IsActive ? "Aktif" : "Pasif")
                                    </span>
                            </td>
                            <td class="px-5 py-4">
                                <div class="flex space-x-1">
                                    <a asp-action="Edit" asp-route-id="@item.Id"
                                       class="p-1.5 text-white bg-yellow-500 rounded-md hover:bg-yellow-600" title="Düzenle">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <form asp-action="ToggleActive" asp-route-id="@item.Id" method="post" class="inline">
                                        <button type="submit"
                                                class="p-1.5 text-white @(item.IsActive ? "bg-gray-500 hover:bg-gray-600" : "bg-green-500 hover:bg-green-600")"
                                                title="@(item.IsActive ? "Pasif Yap" : "Aktif Yap")"
                                                rounded-md>
                                            <i class="fas @(item.IsActive ? "fa-toggle-off" : "fa-toggle-on")"></i>
                                        </button>
                                    </form>
                                    <button type="button"
                                            class="p-1.5 text-white bg-red-500 rounded-md hover:bg-red-600"
                                            title="Sil"
                                            data-modal-target="delete-modal"
                                            data-modal-toggle="delete-modal"
                                            data-id="@item.Id"
                                            data-name="@item.Name">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<!-- Silme Modal (Same as User/Index) -->
<div id="delete-modal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
    <div class="relative p-4 w-full max-w-md max-h-full">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
            <!-- Modal header -->
            <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600 border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                    Menü Öğesi Silme
                </h3>
                <button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="delete-modal">
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                    </svg>
                    <span class="sr-only">Modalı kapat</span>
                </button>
            </div>
            <!-- Modal body -->
            <div class="p-4 md:p-5">
                <p class="mb-3 text-gray-700 dark:text-gray-300">
                    <span id="menuItemName"></span> menü öğesini silmek istediğinize emin misiniz?
                </p>
                <div class="flex items-center text-red-600 dark:text-red-400 mt-3">
                    <i class="fas fa-exclamation-triangle mr-2"></i>
                    <span>Bu işlem geri alınamaz.</span>
                </div>
            </div>
            <!-- Modal footer -->
            <div class="flex items-center justify-end p-4 md:p-5 border-t border-gray-200 rounded-b dark:border-gray-600">
                <button data-modal-hide="delete-modal" type="button" class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-gray-200 rounded-md border border-gray-300 hover:bg-gray-300 focus:z-10">İptal</button>
                <form asp-action="Delete" method="post" class="ml-2">
                    <input type="hidden" name="id" id="menuItemId" />
                    <button type="submit" class="text-white bg-red-600 hover:bg-red-700 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-md text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800">Sil</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Silme butonlarını dinle
            const deleteButtons = document.querySelectorAll('[data-modal-target="delete-modal"]');

            deleteButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const menuId = button.getAttribute('data-id');
                    const menuName = button.getAttribute('data-name');

                    // Modal içindeki alanlara verileri doldur
                    document.getElementById('menuItemName').textContent = menuName;
                    document.getElementById('menuItemId').value = menuId;

                    // Modal'ı göster
                    const modal = document.getElementById('delete-modal');
                    modal.classList.remove('hidden');
                    modal.classList.add('flex');
                });
            });

            // Modal kapatma butonları
            const closeButtons = document.querySelectorAll('[data-modal-hide="delete-modal"]');
            closeButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const modal = document.getElementById('delete-modal');
                    modal.classList.add('hidden');
                    modal.classList.remove('flex');
                });
            });

            // Dışarı tıklayarak kapatma (opsiyonel)
            const modal = document.getElementById('delete-modal');
            modal.addEventListener('click', function(event) {
                if (event.target === this) {
                    this.classList.add('hidden');
                    this.classList.remove('flex');
                }
            });
        });
    </script>
}